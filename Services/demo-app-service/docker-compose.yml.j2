version: '3.8'

services:
  frontend:
    container_name: "{{ service_name }}-frontend"
    build: ./frontend
    labels:
      - "traefik.enable=true"
      # Only accessible through service traefik, not bridge traefik
      - "traefik.http.routers.frontend-{{ service_name }}.rule=Host(`frontend.internal`)"
      - "traefik.http.services.frontend-{{ service_name }}.loadbalancer.server.port=9000"
    networks:
      - web  # Only internal network, not bridge-network

  backend:
    container_name: "{{ service_name }}-backend"
    build: ./backend
    labels:
      - "traefik.enable=true"
      # Only accessible through service traefik, not bridge traefik
      - "traefik.http.routers.backend-{{ service_name }}.rule=Host(`backend-{{ service_name }}.internal`)"
      - "traefik.http.services.backend-{{ service_name }}.loadbalancer.server.port=9001"
    networks:
      - web  # Only internal network, not bridge-network

  traefik:
    image: traefik:v2.10
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filepath=/dev/stdout"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=web"
      # Define entrypoints
      - "--entrypoints.web.address=:80"
      # Define HTTP routes directly here instead of in traefik.yml
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--ping=true"
    labels:
      # Service identity labels
      - "com.runner.service.name={{ service_name }}"
      - "com.runner.service.type=entry-point"
      # Traefik routing labels
      - "traefik.enable=true"
      - "traefik.http.routers.demo-app.rule=Host(`{{ service_name }}.{{ domain_full }}`)"
      # Add service binding to connect Host rule with endpoints
      - "traefik.http.routers.demo-app.entrypoints=web"
      - "traefik.http.routers.demo-app.service=frontend"
      # Add another router for API paths
      - "traefik.http.routers.demo-app-api.rule=Host(`{{ service_name }}.{{ domain_full }}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.demo-app-api.entrypoints=web"
      - "traefik.http.routers.demo-app-api.service=backend"
      - "traefik.http.routers.demo-app-api.priority=100"
      # Debug label to see what domain_full resolves to
      - "com.debug.domain_full={{ domain_full }}"
      - "com.debug.service_name={{ service_name }}"
      - "com.debug.runner={{ runner }}"
      - "traefik.http.services.demo-app.loadbalancer.server.port=80"
      - "traefik.docker.network=bridge-network"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Volume for dynamic configuration
      - ./traefik/dynamic:/etc/traefik/dynamic
    networks:
      - web        # For internal communication with frontend/backend
      - bridge-network  # For external access from bridge traefik
networks:
  web:
    name: web-{{ service_name | regex_replace('[^a-zA-Z0-9]', '-') }}
    driver: bridge
    internal: true  # This network is not accessible from outside
  bridge-network:
    name: bridge-network
    external: true 
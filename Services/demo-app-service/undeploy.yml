---
- name: Undeploy Demo App Service
  hosts: all
  become: true
  vars:
    service_number: "1"  # Default value if not provided
    service_name: "{{ service_number }}-demo-app-service"
    domain_base: "{{ lookup('env', 'DOMAIN_BASE') | default('preview.tafu.casa', true) }}"
  
  tasks:
    - name: Display service being undeployed
      debug:
        msg: "Undeploying service: {{ service_name }}"

    - name: Stop and remove service containers
      shell: |
        docker compose down --remove-orphans -v
      args:
        chdir: "/opt/{{ service_name }}"
      ignore_errors: yes

    - name: Remove service directory
      file:
        path: "/opt/{{ service_name }}"
        state: absent

    - name: Get list of Docker containers for this service
      shell: docker ps -a --filter name={{ service_name }} --format "{% raw %}{{.Names}}{% endraw %}"
      register: container_list
      ignore_errors: yes

    - name: Force remove any remaining containers
      shell: docker rm -f {{ item }}
      with_items: "{{ container_list.stdout_lines }}"
      ignore_errors: yes
      when: container_list.stdout_lines | length > 0

    - name: Get list of Docker volumes for this service
      shell: docker volume ls --filter name={{ service_name }} --format "{% raw %}{{.Name}}{% endraw %}"
      register: volume_list
      ignore_errors: yes

    - name: Remove volumes
      shell: docker volume rm {{ item }}
      with_items: "{{ volume_list.stdout_lines }}"
      ignore_errors: yes
      when: volume_list.stdout_lines | length > 0

    - name: Get list of Docker networks for this service
      shell: docker network ls --filter name={{ service_name }} --format "{% raw %}{{.Name}}{% endraw %}"
      register: network_list
      ignore_errors: yes

    - name: Remove networks
      shell: docker network rm {{ item }}
      with_items: "{{ network_list.stdout_lines }}"
      ignore_errors: yes
      when: network_list.stdout_lines | length > 0

    - name: Trigger registry refresh
      uri:
        url: "http://192.168.3.225/api/refresh"
        method: GET
        status_code: 200
        headers:
          Host: "registry.{{ domain_base }}"
      ignore_errors: yes
      delegate_to: localhost
      when: "'192.168.3.225' not in inventory_hostname"
      
    - name: Show success message
      debug:
        msg: "Successfully undeployed service {{ service_name }}. The registry has been refreshed to remove routes."

    - name: Get runner IP address
      uri:
        url: "http://localhost/runner-info/json"
        method: GET
      register: runner_info_response
      ignore_errors: yes 
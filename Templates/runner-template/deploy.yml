---
- name: Deploy Bridge Traefik Server
  hosts: all
  become: true
  vars:
    runner: ""  # Default empty value (no subdomain)
    domain_base: "{{ lookup('env', 'DOMAIN_BASE') | default('preview.tafu.casa', true) }}"  # Make configurable
    domain_prefix: "{{ runner + '.' if runner != '' else '' }}"
    domain_full: "{{ domain_prefix }}{{ domain_base }}"

  tasks:
    - name: Create bridge traefik directory
      file:
        path: /opt/bridge-traefik
        state: directory
        mode: '0755'

    - name: Create traefik config directory
      file:
        path: /opt/bridge-traefik/traefik
        state: directory
        mode: '0755'

    - name: Create traefik dynamic config directory
      file:
        path: /opt/bridge-traefik/traefik/dynamic
        state: directory
        mode: '0755'

    - name: Create runner-info directory
      file:
        path: /opt/bridge-traefik/runner-info
        state: directory
        mode: '0755'

    - name: Copy docker-compose.yml
      template:
        src: docker-compose.yml.j2
        dest: /opt/bridge-traefik/docker-compose.yml
        mode: '0644'

    - name: Copy traefik config
      template:
        src: traefik/traefik.yml.j2
        dest: /opt/bridge-traefik/traefik/traefik.yml
        mode: '0644'

    - name: Copy runner-info app
      copy:
        src: runner-info/app.py
        dest: /opt/bridge-traefik/runner-info/app.py
        mode: '0755'

    - name: Copy runner-info HTML template
      copy:
        src: runner-info/index.html
        dest: /opt/bridge-traefik/runner-info/index.html
        mode: '0644'

    - name: Copy traefik dynamic config
      template:
        src: traefik/dynamic/services.yml.j2
        dest: /opt/bridge-traefik/traefik/dynamic/services.yml
        mode: '0644'

    - name: Check if bridge network exists
      command: docker network inspect bridge-network
      register: network_check
      failed_when: false

    - name: Create bridge network if it doesn't exist
      command: docker network create bridge-network
      when: network_check.rc != 0
      register: network_created
      failed_when: network_created.rc != 0 and "already exists" not in network_created.stderr

    - name: Deploy Bridge Traefik
      shell: |
        cd /opt/bridge-traefik
        docker compose down --remove-orphans
        docker compose up -d 